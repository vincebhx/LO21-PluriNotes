// -- LIEN READ AND WRITE DU RAPPORT -- //

https://www.overleaf.com/9939780kpmyhcyvbndt#/36478809/

// -- BOITE A IDEES & TODOS -- //

- Fichier UML 
- Réusabilité du code : design patterns utilisés ?
- Ne pas hésiter à blablater un peu sur le gros travail fait sur l'interface!

// -- SI VOUS N'AVEZ PAS INTERNET :


-------------------------------------------


\documentclass[a4paper,12pt]{article}
\usepackage{tikz}
\usepackage{color,xcolor,ucs}
\usepackage{graphicx}
\usepackage[frenchb]{babel}
\usepackage{moreverb}
\usepackage[utf8]{inputenc}
\usepackage{xcolor}
\usepackage{minted}
\usepackage{keyval}
\usepackage{fancyvrb}
\usepackage{float}
\usepackage{ifthen}
\usepackage{calc}
\usepackage{ifplatform}
\usepackage{listings}
\usemintedstyle{borland}
\usepackage{tgtermes}
\usepackage[T1]{fontenc}
\usepackage[top=1.2in, bottom=1.2in, left = 1in, right = 1in]{geometry}
\usepackage[linkcolor=black,colorlinks=true,urlcolor=blue]{hyperref}
\usepackage{amsmath}
\title{LO21 - PluriNotes}
\author{Vincent \bsc{Baheux}, Geerthana \bsc{Selliah}, Léna \bsc{Schofield}}
\begin{document}
\maketitle
\begin{center}
\rule{\textwidth}{1pt}
\end{center}
\section{Architecture du projet}

\section{Réusabilité du code}

La programmation orientée-objet oeuvre à obtenir d'un code qu'il soit réutilisable, facilitant ainsi son évolution du code en fonction des besoins des utilisateurs.

\subsection{Types de notes}
\verb|Note| est une classe mère: ses classes filles sont, dans le cadre du sujet proposé, \verb|Article|, \verb|Tache|, \verb|Media|, \verb|Audio|, \verb|Image|, \verb|Video|.

Nous avons, au cours du développement du projet, implémenté des fonctions outils comme \verb|Note* NotesManager::findNote(QString& id)| qui permet de renvoyer une note à partir d'un identifiant. Pour éviter de répéter les mêmes bouts de code pour chaque type de note existant (ce qui se serait résumé à recopier la même fonction autant de fois qu'il existe de type de notes, et demander d'en renvoyer un différent à chaque fois), nous avons utilisé le up-casting : la note, une fois trouvée, \textit{quitte} son type (qu'importe soit-il) pour obtenir celui de \verb|Note|. Les informations liées à son type initial ne sont cependant pas perdues : on utilise par la suite le down-casting.

% DOWN OU UPCASTING ?

\end{document}
